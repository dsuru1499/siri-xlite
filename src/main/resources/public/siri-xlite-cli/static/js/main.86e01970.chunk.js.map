{"version":3,"sources":["reducers.js","store.js","services/StopPointsDiscoveryService.js","types.js","services/StopMonitoringService.js","actions.js","components/stop-monitoring/StopMonitoringComponent.jsx","components/stop-points-discovery/StopPointsDiscoveryComponent.jsx","App.js","index.js"],"names":["reducers","handleActions","LINES_DISCOVERY/SUCCESS","state","action","Object","assign","linesDiscovery","payload","LINES_DISCOVERY/FAILURE","STOP_POINTS_DISCOVERY/SUCCESS","stopPointsDiscovery","STOP_POINTS_DISCOVERY/FAILURE","STOP_MONITORING/SUCCESS","result","stopMonitoring","meta","name","STOP_MONITORING/FAILURE","ESTIMATED_TIMETABLE/SUCCESS","estimatedTimetable","ESTIMATED_TIMETABLE/FAILURE","store","createStore","applyMiddleware","thunk","logger","StopPointsDiscoveryService","get","options","_this","this","upperLeft","toTile","lowerRight","urls","y","x","url","push","from","pipe","mergeMap","request","reduce","accumulator","value","concat","lon","lat","zoom","Math","floor","pow","log","tan","PI","cos","fetch","Content-Type","then","response","json","StopMonitoringService","entries","map","_ref","_ref2","slicedToArray","key","join","console","actions","createActions","LINES_DISCOVERY","SUCCESS","FAILURE","STOP_POINTS_DISCOVERY","STOP_MONITORING","ESTIMATED_TIMETABLE","StopMonitoringComponent","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","counter","initialize","dispose","_options","_this2","defineProperty","length","onChange","timer","setInterval","e","clearInterval","onClose","Row","react_default","a","createElement","scope","dist_default","format","MonitoredCall","ExpectedDepartureTime","style","textTransform","DestinationName","PublishedLineName","index_es","color","icon","className","values","MonitoredVehicleJourney","ItemIdentifier","React","Component","selector","createSelector","Siri","StopMonitoringDelivery","MonitoredStopVisit","connect","dispatch","failure","stopMonitoringService","subscribe","success","error","StopPointsDiscoveryComponent","ref","createRef","update","stopPointIcon","L","iconUrl","shadowUrl","stopAreaIcon","current","center","addTo","markers","popups","scale","mousePosition","position","on","load","bounds","getBounds","count","getLayers","contains","dx","diff","getEast","getWest","dy","getNorth","getSouth","getNorthWest","lng","getSouthEast","b","abs","clearLayers","forEach","i","latlng","location","latitude","longitude","title","stopName","stopPointRef","alt","startsWith","marker","createPopup","addLayer","popup","getPopup","closePopup","autoClose","closeOnClick","closeButton","setLatLng","getLatLng","div","document","setContent","element","es","components_stop_monitoring_StopMonitoringComponent","ReactDOM","render","bindPopup","unmountComponentAtNode","unbindPopup","id","defaultProps","stopPointsDiscoveryService","library","add","faBus","App","components_stop_points_discovery_StopPointsDiscoveryComponent","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.86e01970.chunk.js","sourcesContent":["import { handleActions } from \"redux-actions\";\n\nconst reducers = handleActions(\n    {\n        \"LINES_DISCOVERY/SUCCESS\": (state, action) => {\n            return Object.assign({}, state, { linesDiscovery: action.payload })\n        },\n        \"LINES_DISCOVERY/FAILURE\": (state, action) => {\n            return Object.assign({}, state, { linesDiscovery: {} })\n        },\n        \"STOP_POINTS_DISCOVERY/SUCCESS\": (state, action) => {\n            return Object.assign({}, state, { stopPointsDiscovery: action.payload })\n        },\n        \"STOP_POINTS_DISCOVERY/FAILURE\": (state, action) => {\n            return Object.assign({}, state, { stopPointsDiscovery: {} })\n        },\n        \"STOP_MONITORING/SUCCESS\": (state, action) => {\n            let result = Object.assign({}, state);\n            result.stopMonitoring[action.meta.name] = action.payload;\n            return result;\n        },\n        \"STOP_MONITORING/FAILURE\": (state, action) => {\n            let result = Object.assign({}, state);\n            delete result.stopMonitoring[action.meta.name];\n            return result;\n        },\n        \"ESTIMATED_TIMETABLE/SUCCESS\": (state, action) => {\n            let result = Object.assign({}, state);\n            result.estimatedTimetable[action.meta.name] = action.payload;\n            return result;\n        },\n        \"ESTIMATED_TIMETABLE/FAILURE\": (state, action) => {\n            let result = Object.assign({}, state);\n            delete result.estimatedTimetable[action.meta.name];\n            return result;\n        }\n    },\n    {\n        linesDiscovery: [],\n        stopPointsDiscovery: [],\n        stopMonitoring: [],\n        estimatedTimetable: []\n    }\n);\n\nexport default reducers;","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport reducers from './reducers'\n\nconst store = createStore(\n    reducers,\n    applyMiddleware(thunk, logger)\n);\n\nexport default store;\n","import { from } from 'rxjs';\nimport { mergeMap, reduce } from 'rxjs/operators';\nimport * as T from \"../types\";\n\nconst StopPointsDiscoveryService = {\n    get: function (options) {\n        let upperLeft = this.toTile(options[T.UPPER_LEFT_LONGITUDE], options[T.UPPER_LEFT_LATITUDE], T.ZOOM);\n        let lowerRight = this.toTile(options[T.LOWER_RIGHT_LONGITUDE], options[T.LOWER_RIGHT_LATITUDE], T.ZOOM);\n        let urls = [];\n        for (let y = upperLeft[1]; y <= lowerRight[1]; y++) {\n            for (let x = upperLeft[0]; x <= lowerRight[0]; x++) {\n                let url = (process.env.NODE_ENV !== \"production\") ? \"https://localhost:8443\" : \"\"\n                url += \"/siri-xlite/stoppoints-discovery/\" + x + \"/\" + y;\n                urls.push(url);\n            }\n        }\n\n        return from(urls).pipe(\n            mergeMap( url => this.request(url)),\n            reduce((accumulator, value) => accumulator.concat(value))\n        );\n    },\n\n    toTile: function (lon, lat, zoom) {\n        let result = [Math.floor((lon + 180) / 360 * Math.pow(2, zoom)),\n        Math.floor((1 - Math.log(Math.tan(lat * Math.PI / 180) + 1 / Math.cos(lat * Math.PI / 180)) / Math.PI) / 2 * Math.pow(2, zoom))];\n        return result;\n    },\n\n    request: function (url) {\n        return from(fetch(url, {\n            \"Content-Type\": \"application/json\"\n        }).then(response => response.json()));\n    }\n};\n\nexport default StopPointsDiscoveryService;\n","export const UPPER_LEFT_LONGITUDE = \"BoundingBox.UpperLeft.Longitude\";\nexport const UPPER_LEFT_LATITUDE = \"BoundingBox.UpperLeft.Latitude\";\nexport const LOWER_RIGHT_LONGITUDE = \"BoundingBox.LowerRight.Longitude\";\nexport const LOWER_RIGHT_LATITUDE = \"BoundingBox.LowerRight.Latitude\";\n\nexport const MONITORING_REF = \"MonitoringRef\";\nexport const MAXIMUM_STOP_VISITS = \"MaximumStopVisits\";\nexport const MAXIMUM_NUMBER_CALLS_OF_ONWARDS = \"MaximumNumberOfCalls.Onwards\";\nexport const MAXIMUM_NUMBER_CALLS_OF_PREVIOUS = \"MaximumNumberOfCalls.Previous\";\n\nexport const ZOOM = 15;\n","import { from } from 'rxjs';\n\nconst StopMonitoringService = {\n    get: function (options) {\n        let url = (process.env.NODE_ENV !== \"production\") ? \"http://127.0.0.1:8080\" : \"\"\n        url += \"/siri-lite/stop-monitoring\"\n        url += options && \"?\" + Object.entries(options).map(([key, value]) => `${key}=${value}`).join('&');\n        return this.request(url);\n    },\n\n    request: function (url) {\n        console.log(\"request \" + url)\n        return from(fetch(url, {\n            \"Content-Type\": \"application/json\"\n        }).then(response => response.json()));\n    }\n};\n\nexport default StopMonitoringService;","import { createActions } from 'redux-actions';\nimport linesDiscoveryService from \"./services/LinesDiscoveryService\";\nimport stopPointsDiscoveryService from \"./services/StopPointsDiscoveryService\";\nimport stopMonitoringService from \"./services/StopMonitoringService\";\nimport estimatedTimetableService from \"./services/EstimatedTimetableService\";\n\nexport const loadLinesDiscovery = (payload) => dispatch => {\n    return linesDiscoveryService.get(payload).subscribe(\n        value => dispatch(actions.linesDiscovery.success(value)),\n        error => dispatch(actions.linesDiscovery.failure(error))\n    );\n};\n\nexport const loadStopPointsDiscovery = (payload) => dispatch => {\n    return stopPointsDiscoveryService.get(payload).subscribe(\n        value => dispatch(actions.stopPointsDiscovery.success(value)),\n        error => dispatch(actions.stopPointsDiscovery.failure(error))\n    );\n};\n\nexport const loadStopMonitoring = (payload, name) => dispatch => {\n    return stopMonitoringService.get(payload).subscribe(\n        value => dispatch(actions.stopMonitoring.success(value, name)),\n        error => dispatch(actions.stopMonitoring.failure(error, name))\n    );\n};\n\nexport const loadEstimatedTimetable = (payload, name) => dispatch => {\n    return estimatedTimetableService.get(payload).subscribe(\n        value => dispatch(actions.estimatedTimetable.success(value, name)),\n        error => dispatch(actions.estimatedTimetable.failure(error, name))\n    );\n};\n\nconst actions = createActions(\n    {\n        LINES_DISCOVERY: {\n            SUCCESS: payload => payload,\n            FAILURE: payload => payload\n        },\n        STOP_POINTS_DISCOVERY: {\n            SUCCESS: payload => payload,\n            FAILURE: payload => payload\n        },\n        STOP_MONITORING: {\n            SUCCESS: [\n                payload => payload,\n                (payload, name) => ({ name })\n            ],\n            FAILURE: [\n                payload => payload,\n                (payload, name) => ({ name })\n            ],\n        },\n        ESTIMATED_TIMETABLE: {\n            SUCCESS: [\n                payload => payload,\n                (payload, name) => ({ name })\n            ],\n            FAILURE: [\n                payload => payload,\n                (payload, name) => ({ name })\n            ],\n        }\n    }\n);\n\nexport default actions;\n","import React from \"react\";\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\nimport { createSelector } from 'reselect'\nimport Moment from 'react-moment';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport actions, { loadStopMonitoring } from \"../../actions\";\nimport * as T from \"../../types\";\nimport \"./StopMonitoringComponent.scss\"\n\nclass StopMonitoringComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.counter = 1;\n    }\n\n    componentDidMount() {\n        this.initialize();\n    }\n\n    componentWillUnmount() {\n        this.dispose();\n    }\n\n    initialize() {\n        const options = {\n            [T.MONITORING_REF]: this.props.name,\n            [T.MAXIMUM_STOP_VISITS]: this.props.length,\n            [T.MAXIMUM_NUMBER_CALLS_OF_PREVIOUS]: 0,\n            [T.MAXIMUM_NUMBER_CALLS_OF_ONWARDS]: 0,\n        };\n        this.props.onChange(options);\n        this.timer = setInterval((e) => this.counter++ && this.props.onChange(options), 10000);\n    }\n\n    dispose() {\n        clearInterval(this.timer);\n        this.props.onClose();\n    }\n\n    render() {\n\n        const Row = (props) => {\n            return (<tr >\n                <th scope=\"row\"><Moment format=\"HH:mm\">{props.value.MonitoredCall.ExpectedDepartureTime}</Moment></th>\n                <td style={{ textTransform: 'uppercase' }}>{props.value.DestinationName}</td>\n                <td style={{ textTransform: 'uppercase' }}>{props.value.PublishedLineName}</td>\n                <td>\n                    <FontAwesomeIcon style={{ color: \"steelblue\" }} icon=\"bus\" />\n                </td>\n            </tr>)\n        }\n\n        const Rows = (props) => {\n            return (props.values) ? props.values.map((value) => <Row value={value.MonitoredVehicleJourney} key={value.ItemIdentifier} />) : (null);\n        }\n\n        return (<div>\n            <h5>#{this.counter} StopMonitoring: {this.props.name}</h5>\n            <table className=\"table table-sm table-hover\">\n                <thead>\n                    <tr>\n                        <th>Departure</th>\n                        <th>Destination</th>\n                        <th>Line</th>\n                        <th>#</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <Rows values={this.props.values} />\n                </tbody>\n            </table>\n        </div >);\n    }\n}\n\nStopMonitoringComponent.propTypes = {\n    name: PropTypes.string.isRequired,\n    length: PropTypes.number.isRequired,\n    values: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onClose: () => dispatch(actions.stopMonitoring.failure({})),\n        onChange: (options) => {\n            dispatch(loadStopMonitoring(options, options[T.MONITORING_REF]));\n        }\n    }\n}\n\nconst selector = createSelector((state, props) => state.stopMonitoring[props.name],\n    value => value ? value.Siri.StopMonitoringDelivery.MonitoredStopVisit : []);\n\nconst mapStateToProps = (state, props) => {\n    return {\n        name: props.name,\n        length: props.length,\n        values: selector(state, props)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(StopMonitoringComponent);","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport PropTypes from \"prop-types\";\nimport { Provider, connect } from \"react-redux\";\nimport { createSelector } from 'reselect'\nimport * as L from \"leaflet\";\nimport * as LeafletMousePosition from \"leaflet-mouse-position\";\n\nimport store from \"../../store\"\nimport \"./StopPointsDiscoveryComponent.scss\";\nimport actions, { loadStopPointsDiscovery } from \"../../actions\";\nimport * as T from \"../../types\";\nimport StopMonitoringComponent from \"../stop-monitoring/StopMonitoringComponent\";\n\nclass StopPointsDiscoveryComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.ref = React.createRef();\n    }\n\n    componentDidMount() {\n        this.initialize();\n    }\n\n    componentWillUnmount() {\n        this.dispose();\n    }\n\n    componentDidUpdate() {\n        this.update(this.props.value);\n    }\n\n    initialize() {\n        this.stopPointIcon = L.icon({\n            iconUrl: \"images/marker-icon.png\",\n            shadowUrl: \"images/marker-shadow.png\"\n        });\n\n        this.stopAreaIcon = L.icon({\n            iconUrl: \"images/marker-red-icon.png\",\n            shadowUrl: \"images/marker-shadow.png\"\n        });\n\n        this.map = new L.map(this.ref.current, {\n            center: L.latLng(this.props.center),\n            zoom: this.props.zoom\n        });\n        L.tileLayer(this.props.url, {}).addTo(this.map);\n        this.markers = L.layerGroup([]).addTo(this.map);\n        this.popups = L.layerGroup([]).addTo(this.map);\n        L.control.scale().addTo(this.map);\n        L.control.mousePosition({position: \"bottomright\"}).addTo(this.map);\n\n        this.map.on(\"moveend\", this.load, this);\n        this.load();\n    }\n\n    dispose() {\n        this.props.onClose();\n    }\n\n    load() {\n\n        let bounds = this.map.getBounds();\n        console.log(\"[DSU] bounds\");\n        console.log(bounds);\n\n        let count = this.markers.getLayers().length;\n        if (!this.bounds || !this.bounds.contains(bounds) || count === 0) {\n            let dx = this.diff(bounds.getEast(), bounds.getWest());\n            let dy = this.diff(bounds.getNorth(), bounds.getSouth());\n\n            console.log(\"[DSU] dx: \" + dx);\n            console.log(\"[DSU] dy: \" + dy);\n\n            this.bounds = new L.LatLngBounds(\n                new L.LatLng(bounds.getSouth() - dy, bounds.getWest() - dx),\n                new L.LatLng(bounds.getNorth() + dy, bounds.getEast() + dx)\n            );\n            const options = {\n                [T.UPPER_LEFT_LONGITUDE]: bounds.getNorthWest().lng,\n                [T.UPPER_LEFT_LATITUDE]: bounds.getNorthWest().lat,\n                [T.LOWER_RIGHT_LONGITUDE]: bounds.getSouthEast().lng,\n                [T.LOWER_RIGHT_LATITUDE]: bounds.getSouthEast().lat,\n            };\n            console.log(\"[DSU] call load\");\n            console.log(options);\n            this.props.onChange(options);\n        }\n    }\n\n    diff(a, b) {\n        let result = a * b > 0 ? Math.abs(b - a) : Math.abs(a) + Math.abs(b);\n        return result;\n    }\n\n    update(values) {\n        console.log(\"[DSU] update \");\n        console.log(values);\n        this.markers.clearLayers();\n        this.popups.clearLayers();\n        if (values && values.length > 0) {\n            values.forEach(i => {\n                let latlng = L.latLng(i.location.latitude, i.location.longitude);\n                let options = {\n                    title: i.stopName + \"\\n\" + i.stopPointRef,\n                    alt: i.stopPointRef,\n                    icon: i.stopPointRef.startsWith(\"StopArea\")\n                        ? this.stopAreaIcon\n                        : this.stopPointIcon\n                };\n                let marker = L.marker(latlng, options);\n                marker.on(\"click\", () => {\n                    this.createPopup(marker);\n                });\n                this.markers.addLayer(marker);\n            });\n        }\n    }\n\n    createPopup(marker) {\n        let popup = marker.getPopup();\n        if (popup) {\n            popup.closePopup();\n        } else {\n            let popup = L.popup({\n                autoClose: false,\n                closeOnClick: false,\n                closeButton: false\n            });\n            popup.setLatLng(marker.getLatLng());\n\n            let div = document.createElement('div');\n            popup.setContent(div);\n            const element = <Provider store={store}><StopMonitoringComponent name={marker.options.alt} length={10} /></Provider>;\n            ReactDOM.render(element, div);\n\n            marker.bindPopup(popup);\n            marker.on(\"popupclose\", () => {\n                ReactDOM.unmountComponentAtNode(div);\n                marker.unbindPopup();\n            });\n            this.popups.addLayer(popup);\n        }\n    }\n\n    render() {\n        return (<div id=\"map\" ref={this.ref} />);\n    }\n}\n\nStopPointsDiscoveryComponent.propTypes = {\n    url: PropTypes.string.isRequired,\n    center: PropTypes.array.isRequired,\n    zoom: PropTypes.number.isRequired,\n    value: PropTypes.array.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nStopPointsDiscoveryComponent.defaultProps = {\n    url: \"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    center: [48.866667, 2.333333],\n    zoom: 15,\n    value: []\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onClose: () => dispatch(actions.stopPointsDiscovery.failure({})),\n        onChange: (options) => {\n            dispatch(loadStopPointsDiscovery(options));\n        }\n    }\n}\n\nconst selector = createSelector((state, props) => state.stopPointsDiscovery, value => value);\n\nconst mapStateToProps = (state, props) => {\n    return {\n        url: props.url,\n        center: props.center,\n        zoom: props.zoom,\n        value: selector(state, props)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(StopPointsDiscoveryComponent);","import React from \"react\";\nimport StopPointsDiscoveryComponent from \"./components/stop-points-discovery/StopPointsDiscoveryComponent\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBus } from '@fortawesome/free-solid-svg-icons'\nimport \"./App.scss\";\n\nlibrary.add(faBus)\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <StopPointsDiscoveryComponent center={[48.866667, 2.333333]} zoom={15} />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\"\n\nimport \"./index.scss\";\nimport App from \"./App\";\nimport store from \"./store\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));"],"sourceRoot":""}